@tailwind base;
@tailwind components;
@tailwind utilities;

/**
 * ⚠️ IMPORTANT: RainbowKit Styling Guidelines ⚠️
 *
 * 1. RainbowKit styles MUST be imported in app/layout.tsx, NOT here
 * 2. These CSS variables customize RainbowKit's appearance
 * 3. DO NOT use !important flags that might override RainbowKit's styles
 * 4. DO NOT modify the [data-rk] and [role="dialog"] selectors without testing
 */

@layer base {
  :root {
    /* Base theme variables - LIGHTENED for better visibility */
    --background: 240 10% 5%; /* Slightly lighter */
    --foreground: 0 0% 98%;
    --card: 240 10% 7%; /* Lighter card background */
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 7%; /* Lighter popover background */
    --popover-foreground: 0 0% 98%;
    --primary: 263.4 70% 50.4%;
    --primary-foreground: 210 40% 98%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
    --radius: 0.5rem;

    /* RainbowKit specific variables - DO NOT REMOVE */
    --rk-blurs-modalOverlay: blur(4px);
    --rk-fonts-body: system-ui, sans-serif;
    --rk-radii-actionButton: 6px;
    --rk-radii-connectButton: 6px;
    --rk-radii-menuButton: 6px;
    --rk-radii-modal: 10px;
    --rk-radii-modalMobile: 10px;
    --rk-colors-accentColor: #8b5cf6;
    --rk-colors-accentColorForeground: white;
    --rk-colors-actionButtonBorder: rgba(139, 92, 246, 0.3);
    --rk-colors-actionButtonBorderMobile: rgba(139, 92, 246, 0.3);
    --rk-colors-actionButtonSecondaryBackground: rgba(139, 92, 246, 0.1);
    --rk-colors-closeButton: rgba(255, 255, 255, 0.8);
    --rk-colors-closeButtonBackground: rgba(139, 92, 246, 0.2);
    --rk-colors-connectButtonBackground: #0d0d14;
    --rk-colors-connectButtonBackgroundError: #ff494a;
    --rk-colors-connectButtonInnerBackground: linear-gradient(
      to right,
      rgba(139, 92, 246, 0.2),
      rgba(59, 130, 246, 0.2)
    );
    --rk-colors-connectButtonText: #fff;
    --rk-colors-connectButtonTextError: #fff;
    --rk-colors-connectionIndicator: #30e000;
    --rk-colors-error: #ff494a;
    --rk-colors-generalBorder: rgba(139, 92, 246, 0.3);
    --rk-colors-generalBorderDim: rgba(139, 92, 246, 0.2);
    --rk-colors-menuItemBackground: rgba(139, 92, 246, 0.1);
    --rk-colors-modalBackground: #0d0d14;
    --rk-colors-modalBorder: rgba(139, 92, 246, 0.3);
    --rk-colors-modalText: #fff;
    --rk-colors-modalTextDim: rgba(255, 255, 255, 0.3);
    --rk-colors-modalTextSecondary: rgba(255, 255, 255, 0.6);
    --rk-colors-profileAction: rgba(139, 92, 246, 0.1);
    --rk-colors-profileActionHover: rgba(139, 92, 246, 0.2);
    --rk-colors-profileForeground: rgba(139, 92, 246, 0.05);
    --rk-colors-selectedOptionBorder: rgba(139, 92, 246, 0.3);
    --rk-colors-standby: #ffd641;
    --rk-shadows-connectButton: 0px 4px 12px rgba(139, 92, 246, 0.4);
    --rk-shadows-dialog: 0px 8px 32px rgba(139, 92, 246, 0.4);
    --rk-shadows-profileDetailsAction: 0px 2px 6px rgba(37, 41, 46, 0.04);
    --rk-shadows-selectedOption: 0px 2px 6px rgba(139, 92, 246, 0.24);
    --rk-shadows-selectedWallet: 0px 2px 6px rgba(139, 92, 246, 0.24);
    --rk-shadows-walletLogo: 0px 2px 16px rgba(139, 92, 246, 0.16);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  /* IMPORTANT: position:relative on body is required for RainbowKit modal positioning */
  body {
    @apply bg-background text-foreground;
    position: relative; /* DO NOT REMOVE - Required for RainbowKit modal */
    background-color: #0a0a0a; /* Slightly lighter than pure black */
    background-image: radial-gradient(circle at 20% 30%, rgba(76, 29, 149, 0.2) 0%, rgba(0, 0, 0, 0) 40%),
      radial-gradient(circle at 80% 70%, rgba(56, 189, 248, 0.15) 0%, rgba(0, 0, 0, 0) 40%);
    background-size: 100% 100%;
    background-attachment: fixed;
  }
}

/**
 * ⚠️ CRITICAL: RainbowKit Modal Positioning ⚠️
 * These selectors target Radix UI Dialog components used by RainbowKit
 * DO NOT REMOVE or MODIFY these selectors or the modal will break
 *
 * If the modal appears in the wrong position:
 * 1. Ensure body has position:relative
 * 2. Ensure these selectors are present
 * 3. Ensure no parent containers have overflow:hidden
 */

/* Fix for Radix UI Dialog components used by RainbowKit */
[data-radix-popper-content-wrapper] {
  z-index: 9999 !important; /* Ensure popper content is above everything */
}

/* Target Radix Dialog components used by RainbowKit */
[role="dialog"] {
  position: fixed !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  z-index: 9999 !important;
  max-width: 420px !important;
  width: 100% !important;
}

/* Dialog overlay - ONLY ACTIVE WHEN DIALOG IS OPEN */
[data-radix-dialog-overlay] {
  position: fixed !important;
  inset: 0 !important;
  background-color: rgba(0, 0, 0, 0.5) !important;
  z-index: 9998 !important;
  pointer-events: auto !important; /* Ensure it only captures events when visible */
}

/* RainbowKit specific styles */
[data-rk] {
  --rk-overlay-backdrop-filter: blur(4px);
  --rk-overlay-background-color: rgba(0, 0, 0, 0.6);
  --rk-overlay-z-index: 9999;
}

/* Ensure the modal is centered */
[data-rk] [role="dialog"] {
  position: fixed !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  max-width: 420px !important;
  width: 100% !important;
  border-radius: var(--rk-radii-modal) !important;
  border: 1px solid var(--rk-colors-modalBorder) !important;
  background-color: var(--rk-colors-modalBackground) !important;
  box-shadow: var(--rk-shadows-dialog) !important;
  z-index: var(--rk-overlay-z-index) !important;
}

/* Ensure the overlay covers the entire screen ONLY WHEN DIALOG IS OPEN */
[data-rk] [role="dialog"]::before {
  content: "";
  position: fixed;
  inset: 0;
  background-color: var(--rk-overlay-background-color);
  backdrop-filter: var(--rk-overlay-backdrop-filter);
  z-index: -1;
  pointer-events: none; /* Allow clicks to pass through when not needed */
}

/* Fix for RainbowKit modal positioning */
#radix-\:r0 {
  position: fixed;
  inset: 0;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none; /* Allow clicks to pass through when not needed */
}

#radix-\:r0[data-state="open"] {
  pointer-events: auto; /* Capture clicks only when open */
}

/* Add these animations for the token burning visualization */
@keyframes float-to-center {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: translateX(calc(50vw - 50% - var(--x))) translateY(calc(50vh - 50% - var(--y))) scale(0.1);
  }
}

.animate-float-to-center {
  animation: float-to-center 3s infinite;
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes pulse-glow {
  0% {
    box-shadow: 0 0 5px 0 rgba(139, 92, 246, 0.5);
  }
  50% {
    box-shadow: 0 0 20px 5px rgba(139, 92, 246, 0.7);
  }
  100% {
    box-shadow: 0 0 5px 0 rgba(139, 92, 246, 0.5);
  }
}

@keyframes pulse-slow {
  0% {
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.7;
  }
}

@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes text-flicker {
  0% {
    opacity: 0.8;
    text-shadow: 0 0 10px rgba(139, 92, 246, 0.7);
  }
  10% {
    opacity: 1;
    text-shadow: 0 0 15px rgba(139, 92, 246, 0.9);
  }
  15% {
    opacity: 0.9;
    text-shadow: 0 0 8px rgba(139, 92, 246, 0.6);
  }
  25% {
    opacity: 1;
    text-shadow: 0 0 15px rgba(139, 92, 246, 0.9);
  }
  30% {
    opacity: 0.9;
    text-shadow: 0 0 8px rgba(139, 92, 246, 0.6);
  }
  100% {
    opacity: 0.8;
    text-shadow: 0 0 10px rgba(139, 92, 246, 0.7);
  }
}

@keyframes neon-pulse {
  0% {
    box-shadow: 0 0 5px 0 rgba(139, 92, 246, 0.5), 0 0 10px 0 rgba(56, 189, 248, 0.3);
  }
  50% {
    box-shadow: 0 0 15px 0 rgba(139, 92, 246, 0.8), 0 0 20px 0 rgba(56, 189, 248, 0.5);
  }
  100% {
    box-shadow: 0 0 5px 0 rgba(139, 92, 246, 0.5), 0 0 10px 0 rgba(56, 189, 248, 0.3);
  }
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

@keyframes scan-line {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes particle-flow {
  0% {
    transform: translateY(0) translateX(0);
    opacity: 0;
  }
  15% {
    opacity: 1;
  }
  50% {
    transform: translateY(-20px) translateX(10px);
  }
  85% {
    opacity: 1;
  }
  100% {
    transform: translateY(-40px) translateX(20px);
    opacity: 0;
  }
}

/* Custom classes */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-pulse-glow {
  animation: pulse-glow 3s ease-in-out infinite;
}

.animate-pulse-slow {
  animation: pulse-slow 3s ease-in-out infinite;
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradient-shift 5s ease infinite;
}

.animate-text-flicker {
  animation: text-flicker 5s infinite;
}

.animate-neon-pulse {
  animation: neon-pulse 3s infinite;
}

.animate-glitch {
  animation: glitch 0.5s infinite;
}

.animate-rotate {
  animation: rotate 20s linear infinite;
}

.animate-particle-flow {
  animation: particle-flow 3s ease-out infinite;
}

/* UPDATED: Lighter glass card with better visibility */
.glass-card {
  background: rgba(30, 30, 40, 0.6); /* Lighter background */
  backdrop-filter: blur(10px);
  border: 1px solid rgba(139, 92, 246, 0.4); /* More visible border */
  box-shadow: 0 8px 32px 0 rgba(139, 92, 246, 0.3); /* Brighter shadow */
}

.glass-card-purple {
  background: rgba(30, 30, 40, 0.6); /* Lighter background */
  backdrop-filter: blur(10px);
  border: 1px solid rgba(139, 92, 246, 0.4); /* More visible border */
  box-shadow: 0 0 20px rgba(139, 92, 246, 0.4); /* Brighter shadow */
}

/* UPDATED: Lighter cyber card with better visibility */
.cyber-card {
  background: rgba(20, 20, 35, 0.6); /* Lighter background */
  backdrop-filter: blur(10px);
  border: 1px solid rgba(139, 92, 246, 0.4); /* More visible border */
  box-shadow: 0 0 20px rgba(139, 92, 246, 0.6); /* Brighter shadow */
  position: relative;
  overflow: hidden;
}

.cyber-card::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, rgba(139, 92, 246, 0.8), rgba(56, 189, 248, 0.8), transparent);
  animation: scan-line 3s linear infinite;
}

.cyber-border {
  position: relative;
  border: 1px solid rgba(139, 92, 246, 0.4); /* More visible border */
  box-shadow: 0 0 15px rgba(139, 92, 246, 0.6); /* Brighter shadow */
}

.cyber-border::after {
  content: "";
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 1px solid rgba(56, 189, 248, 0.4); /* More visible border */
  box-shadow: 0 0 15px rgba(56, 189, 248, 0.4); /* Brighter shadow */
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  animation: glitch 10s infinite;
}

.text-gradient {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-blue-500;
}

.text-cyber {
  background: linear-gradient(to right, #c084fc, #38bdf8);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
}

.border-gradient {
  border-image: linear-gradient(to right, #c084fc, #818cf8) 1;
}

.glow-text {
  text-shadow: 0 0 10px rgba(139, 92, 246, 0.7);
}

.glow-border {
  box-shadow: 0 0 10px rgba(139, 92, 246, 0.7);
}

.cyber-grid {
  background-image: linear-gradient(rgba(147, 51, 234, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(147, 51, 234, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

.cyber-button {
  position: relative;
  background: linear-gradient(to right, #8b5cf6, #3b82f6);
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  font-weight: bold;
  text-transform: uppercase;
  clip-path: polygon(0 0, 100% 0, 95% 100%, 5% 100%);
  transition: all 0.3s ease;
  box-shadow: 0 0 15px rgba(139, 92, 246, 0.5);
}

.cyber-button:hover {
  box-shadow: 0 0 25px rgba(139, 92, 246, 0.8);
  transform: translateY(-2px);
}

.cyber-button::before {
  content: "";
  position: absolute;
  top: 2px;
  left: 2px;
  right: 2px;
  bottom: 2px;
  background: linear-gradient(to right, #8b5cf6, #3b82f6);
  clip-path: polygon(0 0, 100% 0, 95% 100%, 5% 100%);
  z-index: -1;
  opacity: 0.5;
}

.cyber-input {
  background: rgba(20, 20, 35, 0.7); /* Lighter background */
  border: 1px solid rgba(139, 92, 246, 0.4); /* More visible border */
  color: white;
  padding: 0.75rem 1rem;
  outline: none;
  transition: all 0.3s ease;
}

.cyber-input:focus {
  border-color: rgba(139, 92, 246, 0.8);
  box-shadow: 0 0 15px rgba(139, 92, 246, 0.5);
}

.cyber-divider {
  height: 1px;
  background: linear-gradient(to right, transparent, rgba(139, 92, 246, 0.5), rgba(56, 189, 248, 0.5), transparent);
}

.cyber-text-shadow {
  text-shadow: 0 0 5px rgba(139, 92, 246, 0.5), 0 0 10px rgba(56, 189, 248, 0.3);
}

.cyber-glow {
  box-shadow: 0 0 10px rgba(147, 51, 234, 0.5), 0 0 20px rgba(147, 51, 234, 0.3);
}

.cyber-panel {
  background: rgba(20, 20, 35, 0.7); /* Lighter background */
  border: 1px solid rgba(139, 92, 246, 0.4); /* More visible border */
  box-shadow: 0 0 20px rgba(139, 92, 246, 0.4); /* Brighter shadow */
  clip-path: polygon(0 0, 100% 0, 100% 85%, 85% 100%, 0 100%);
  padding: 1.5rem;
}

.cyber-stat {
  @apply bg-black/30 border border-purple-500/30 rounded-lg;
  position: relative;
  overflow: hidden;
}

.cyber-stat::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to right, rgba(139, 92, 246, 0.15), transparent);
}

/* Futuristic UI elements */
.futuristic-border {
  position: relative;
  border: 1px solid rgba(139, 92, 246, 0.4); /* More visible border */
  overflow: hidden;
}

.futuristic-border::before {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: conic-gradient(transparent, rgba(139, 92, 246, 0.4), transparent, transparent);
  animation: rotate 4s linear infinite;
}

.futuristic-border::after {
  content: "";
  position: absolute;
  inset: 1px;
  background: rgba(20, 20, 35, 0.7); /* Lighter background */
  border-radius: inherit;
}

.futuristic-glow {
  position: relative;
}

.futuristic-glow::before {
  content: "";
  position: absolute;
  inset: -5px;
  background: radial-gradient(circle at center, rgba(139, 92, 246, 0.6), transparent 70%);
  border-radius: inherit;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.futuristic-glow:hover::before {
  opacity: 1;
}

.particle-container {
  position: relative;
  overflow: hidden;
}

.particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background-color: rgba(139, 92, 246, 0.7);
  border-radius: 50%;
  pointer-events: none;
}

/* Add this to the end of your globals.css file */

.text-shadow-lg {
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5), 0 0 20px rgba(139, 92, 246, 0.5);
}

/* NEW: Enhanced visibility classes */
.enhanced-text {
  text-shadow: 0 0 10px rgba(147, 51, 234, 0.3);
  color: rgba(255, 255, 255, 0.95);
}

.enhanced-heading {
  text-shadow: 0 0 15px rgba(147, 51, 234, 0.4);
  color: rgba(255, 255, 255, 0.98);
  letter-spacing: 0.5px;
}

.enhanced-card {
  box-shadow: 0 0 20px rgba(147, 51, 234, 0.2), 0 0 40px rgba(147, 51, 234, 0.1), inset 0 0 20px rgba(139, 92, 246, 0.1);
  background: rgba(30, 30, 45, 0.6);
  border: 1px solid rgba(139, 92, 246, 0.5);
}

.enhanced-glow {
  box-shadow: 0 0 25px rgba(139, 92, 246, 0.6);
}

.light-overlay {
  position: relative;
}

.light-overlay::after {
  content: "";
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at center, rgba(255, 255, 255, 0.03), transparent 70%);
  pointer-events: none;
}
